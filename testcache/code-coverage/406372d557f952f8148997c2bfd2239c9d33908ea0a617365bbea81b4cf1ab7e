a:5:{s:9:"classesIn";a:1:{s:24:"PHPUnit\Framework\Assert";a:6:{s:4:"name";s:6:"Assert";s:14:"namespacedName";s:24:"PHPUnit\Framework\Assert";s:9:"namespace";s:17:"PHPUnit\Framework";s:9:"startLine";i:91;s:7:"endLine";i:2854;s:7:"methods";a:191:{s:17:"assertArrayHasKey";a:6:{s:10:"methodName";s:17:"assertArrayHasKey";s:9:"signature";s:54:"assertArrayHasKey($key, $array, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:108;s:7:"endLine";i:127;s:3:"ccn";i:5;}s:20:"assertArrayNotHasKey";a:6:{s:10:"methodName";s:20:"assertArrayNotHasKey";s:9:"signature";s:57:"assertArrayNotHasKey($key, $array, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:139;s:7:"endLine";i:160;s:3:"ccn";i:5;}s:14:"assertContains";a:6:{s:10:"methodName";s:14:"assertContains";s:9:"signature";s:66:"assertContains($needle, iterable $haystack, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:169;s:7:"endLine";i:174;s:3:"ccn";i:1;}s:20:"assertContainsEquals";a:6:{s:10:"methodName";s:20:"assertContainsEquals";s:9:"signature";s:72:"assertContainsEquals($needle, iterable $haystack, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:176;s:7:"endLine";i:181;s:3:"ccn";i:1;}s:17:"assertNotContains";a:6:{s:10:"methodName";s:17:"assertNotContains";s:9:"signature";s:69:"assertNotContains($needle, iterable $haystack, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:190;s:7:"endLine";i:197;s:3:"ccn";i:1;}s:23:"assertNotContainsEquals";a:6:{s:10:"methodName";s:23:"assertNotContainsEquals";s:9:"signature";s:75:"assertNotContainsEquals($needle, iterable $haystack, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:199;s:7:"endLine";i:204;s:3:"ccn";i:1;}s:18:"assertContainsOnly";a:6:{s:10:"methodName";s:18:"assertContainsOnly";s:9:"signature";s:96:"assertContainsOnly(string $type, iterable $haystack, ?bool $isNativeType, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:212;s:7:"endLine";i:226;s:3:"ccn";i:2;}s:29:"assertContainsOnlyInstancesOf";a:6:{s:10:"methodName";s:29:"assertContainsOnlyInstancesOf";s:9:"signature";s:91:"assertContainsOnlyInstancesOf(string $className, iterable $haystack, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:234;s:7:"endLine";i:244;s:3:"ccn";i:1;}s:21:"assertNotContainsOnly";a:6:{s:10:"methodName";s:21:"assertNotContainsOnly";s:9:"signature";s:99:"assertNotContainsOnly(string $type, iterable $haystack, ?bool $isNativeType, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:252;s:7:"endLine";i:268;s:3:"ccn";i:2;}s:11:"assertCount";a:6:{s:10:"methodName";s:11:"assertCount";s:9:"signature";s:65:"assertCount(int $expectedCount, $haystack, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:279;s:7:"endLine";i:290;s:3:"ccn";i:3;}s:14:"assertNotCount";a:6:{s:10:"methodName";s:14:"assertNotCount";s:9:"signature";s:68:"assertNotCount(int $expectedCount, $haystack, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:301;s:7:"endLine";i:312;s:3:"ccn";i:3;}s:12:"assertEquals";a:6:{s:10:"methodName";s:12:"assertEquals";s:9:"signature";s:55:"assertEquals($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:320;s:7:"endLine";i:325;s:3:"ccn";i:1;}s:26:"assertEqualsCanonicalizing";a:6:{s:10:"methodName";s:26:"assertEqualsCanonicalizing";s:9:"signature";s:69:"assertEqualsCanonicalizing($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:333;s:7:"endLine";i:338;s:3:"ccn";i:1;}s:24:"assertEqualsIgnoringCase";a:6:{s:10:"methodName";s:24:"assertEqualsIgnoringCase";s:9:"signature";s:67:"assertEqualsIgnoringCase($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:346;s:7:"endLine";i:351;s:3:"ccn";i:1;}s:21:"assertEqualsWithDelta";a:6:{s:10:"methodName";s:21:"assertEqualsWithDelta";s:9:"signature";s:78:"assertEqualsWithDelta($expected, $actual, float $delta, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:359;s:7:"endLine";i:367;s:3:"ccn";i:1;}s:15:"assertNotEquals";a:6:{s:10:"methodName";s:15:"assertNotEquals";s:9:"signature";s:58:"assertNotEquals($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:375;s:7:"endLine";i:382;s:3:"ccn";i:1;}s:29:"assertNotEqualsCanonicalizing";a:6:{s:10:"methodName";s:29:"assertNotEqualsCanonicalizing";s:9:"signature";s:72:"assertNotEqualsCanonicalizing($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:390;s:7:"endLine";i:397;s:3:"ccn";i:1;}s:27:"assertNotEqualsIgnoringCase";a:6:{s:10:"methodName";s:27:"assertNotEqualsIgnoringCase";s:9:"signature";s:70:"assertNotEqualsIgnoringCase($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:405;s:7:"endLine";i:412;s:3:"ccn";i:1;}s:24:"assertNotEqualsWithDelta";a:6:{s:10:"methodName";s:24:"assertNotEqualsWithDelta";s:9:"signature";s:81:"assertNotEqualsWithDelta($expected, $actual, float $delta, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:420;s:7:"endLine";i:430;s:3:"ccn";i:1;}s:18:"assertObjectEquals";a:6:{s:10:"methodName";s:18:"assertObjectEquals";s:9:"signature";s:91:"assertObjectEquals(object $expected, object $actual, string $method, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:435;s:7:"endLine";i:442;s:3:"ccn";i:1;}s:11:"assertEmpty";a:6:{s:10:"methodName";s:11:"assertEmpty";s:9:"signature";s:43:"assertEmpty($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:452;s:7:"endLine";i:455;s:3:"ccn";i:1;}s:14:"assertNotEmpty";a:6:{s:10:"methodName";s:14:"assertNotEmpty";s:9:"signature";s:46:"assertNotEmpty($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:465;s:7:"endLine";i:468;s:3:"ccn";i:1;}s:17:"assertGreaterThan";a:6:{s:10:"methodName";s:17:"assertGreaterThan";s:9:"signature";s:60:"assertGreaterThan($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:476;s:7:"endLine";i:479;s:3:"ccn";i:1;}s:24:"assertGreaterThanOrEqual";a:6:{s:10:"methodName";s:24:"assertGreaterThanOrEqual";s:9:"signature";s:67:"assertGreaterThanOrEqual($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:487;s:7:"endLine";i:494;s:3:"ccn";i:1;}s:14:"assertLessThan";a:6:{s:10:"methodName";s:14:"assertLessThan";s:9:"signature";s:57:"assertLessThan($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:502;s:7:"endLine";i:505;s:3:"ccn";i:1;}s:21:"assertLessThanOrEqual";a:6:{s:10:"methodName";s:21:"assertLessThanOrEqual";s:9:"signature";s:64:"assertLessThanOrEqual($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:513;s:7:"endLine";i:516;s:3:"ccn";i:1;}s:16:"assertFileEquals";a:6:{s:10:"methodName";s:16:"assertFileEquals";s:9:"signature";s:73:"assertFileEquals(string $expected, string $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:525;s:7:"endLine";i:533;s:3:"ccn";i:1;}s:30:"assertFileEqualsCanonicalizing";a:6:{s:10:"methodName";s:30:"assertFileEqualsCanonicalizing";s:9:"signature";s:87:"assertFileEqualsCanonicalizing(string $expected, string $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:542;s:7:"endLine";i:552;s:3:"ccn";i:1;}s:28:"assertFileEqualsIgnoringCase";a:6:{s:10:"methodName";s:28:"assertFileEqualsIgnoringCase";s:9:"signature";s:85:"assertFileEqualsIgnoringCase(string $expected, string $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:561;s:7:"endLine";i:569;s:3:"ccn";i:1;}s:19:"assertFileNotEquals";a:6:{s:10:"methodName";s:19:"assertFileNotEquals";s:9:"signature";s:76:"assertFileNotEquals(string $expected, string $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:578;s:7:"endLine";i:588;s:3:"ccn";i:1;}s:33:"assertFileNotEqualsCanonicalizing";a:6:{s:10:"methodName";s:33:"assertFileNotEqualsCanonicalizing";s:9:"signature";s:90:"assertFileNotEqualsCanonicalizing(string $expected, string $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:597;s:7:"endLine";i:607;s:3:"ccn";i:1;}s:31:"assertFileNotEqualsIgnoringCase";a:6:{s:10:"methodName";s:31:"assertFileNotEqualsIgnoringCase";s:9:"signature";s:88:"assertFileNotEqualsIgnoringCase(string $expected, string $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:616;s:7:"endLine";i:626;s:3:"ccn";i:1;}s:22:"assertStringEqualsFile";a:6:{s:10:"methodName";s:22:"assertStringEqualsFile";s:9:"signature";s:89:"assertStringEqualsFile(string $expectedFile, string $actualString, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:635;s:7:"endLine";i:642;s:3:"ccn";i:1;}s:36:"assertStringEqualsFileCanonicalizing";a:6:{s:10:"methodName";s:36:"assertStringEqualsFileCanonicalizing";s:9:"signature";s:103:"assertStringEqualsFileCanonicalizing(string $expectedFile, string $actualString, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:651;s:7:"endLine";i:658;s:3:"ccn";i:1;}s:34:"assertStringEqualsFileIgnoringCase";a:6:{s:10:"methodName";s:34:"assertStringEqualsFileIgnoringCase";s:9:"signature";s:101:"assertStringEqualsFileIgnoringCase(string $expectedFile, string $actualString, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:667;s:7:"endLine";i:674;s:3:"ccn";i:1;}s:25:"assertStringNotEqualsFile";a:6:{s:10:"methodName";s:25:"assertStringNotEqualsFile";s:9:"signature";s:92:"assertStringNotEqualsFile(string $expectedFile, string $actualString, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:683;s:7:"endLine";i:692;s:3:"ccn";i:1;}s:39:"assertStringNotEqualsFileCanonicalizing";a:6:{s:10:"methodName";s:39:"assertStringNotEqualsFileCanonicalizing";s:9:"signature";s:106:"assertStringNotEqualsFileCanonicalizing(string $expectedFile, string $actualString, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:701;s:7:"endLine";i:710;s:3:"ccn";i:1;}s:37:"assertStringNotEqualsFileIgnoringCase";a:6:{s:10:"methodName";s:37:"assertStringNotEqualsFileIgnoringCase";s:9:"signature";s:104:"assertStringNotEqualsFileIgnoringCase(string $expectedFile, string $actualString, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:719;s:7:"endLine";i:728;s:3:"ccn";i:1;}s:16:"assertIsReadable";a:6:{s:10:"methodName";s:16:"assertIsReadable";s:9:"signature";s:57:"assertIsReadable(string $filename, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:736;s:7:"endLine";i:739;s:3:"ccn";i:1;}s:19:"assertIsNotReadable";a:6:{s:10:"methodName";s:19:"assertIsNotReadable";s:9:"signature";s:60:"assertIsNotReadable(string $filename, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:747;s:7:"endLine";i:750;s:3:"ccn";i:1;}s:19:"assertNotIsReadable";a:6:{s:10:"methodName";s:19:"assertNotIsReadable";s:9:"signature";s:60:"assertNotIsReadable(string $filename, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:762;s:7:"endLine";i:767;s:3:"ccn";i:1;}s:16:"assertIsWritable";a:6:{s:10:"methodName";s:16:"assertIsWritable";s:9:"signature";s:57:"assertIsWritable(string $filename, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:775;s:7:"endLine";i:778;s:3:"ccn";i:1;}s:19:"assertIsNotWritable";a:6:{s:10:"methodName";s:19:"assertIsNotWritable";s:9:"signature";s:60:"assertIsNotWritable(string $filename, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:786;s:7:"endLine";i:789;s:3:"ccn";i:1;}s:19:"assertNotIsWritable";a:6:{s:10:"methodName";s:19:"assertNotIsWritable";s:9:"signature";s:60:"assertNotIsWritable(string $filename, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:801;s:7:"endLine";i:806;s:3:"ccn";i:1;}s:21:"assertDirectoryExists";a:6:{s:10:"methodName";s:21:"assertDirectoryExists";s:9:"signature";s:63:"assertDirectoryExists(string $directory, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:814;s:7:"endLine";i:817;s:3:"ccn";i:1;}s:27:"assertDirectoryDoesNotExist";a:6:{s:10:"methodName";s:27:"assertDirectoryDoesNotExist";s:9:"signature";s:69:"assertDirectoryDoesNotExist(string $directory, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:825;s:7:"endLine";i:828;s:3:"ccn";i:1;}s:24:"assertDirectoryNotExists";a:6:{s:10:"methodName";s:24:"assertDirectoryNotExists";s:9:"signature";s:66:"assertDirectoryNotExists(string $directory, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:840;s:7:"endLine";i:845;s:3:"ccn";i:1;}s:25:"assertDirectoryIsReadable";a:6:{s:10:"methodName";s:25:"assertDirectoryIsReadable";s:9:"signature";s:67:"assertDirectoryIsReadable(string $directory, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:853;s:7:"endLine";i:857;s:3:"ccn";i:1;}s:28:"assertDirectoryIsNotReadable";a:6:{s:10:"methodName";s:28:"assertDirectoryIsNotReadable";s:9:"signature";s:70:"assertDirectoryIsNotReadable(string $directory, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:865;s:7:"endLine";i:869;s:3:"ccn";i:1;}s:28:"assertDirectoryNotIsReadable";a:6:{s:10:"methodName";s:28:"assertDirectoryNotIsReadable";s:9:"signature";s:70:"assertDirectoryNotIsReadable(string $directory, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:881;s:7:"endLine";i:887;s:3:"ccn";i:1;}s:25:"assertDirectoryIsWritable";a:6:{s:10:"methodName";s:25:"assertDirectoryIsWritable";s:9:"signature";s:67:"assertDirectoryIsWritable(string $directory, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:895;s:7:"endLine";i:899;s:3:"ccn";i:1;}s:28:"assertDirectoryIsNotWritable";a:6:{s:10:"methodName";s:28:"assertDirectoryIsNotWritable";s:9:"signature";s:70:"assertDirectoryIsNotWritable(string $directory, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:907;s:7:"endLine";i:911;s:3:"ccn";i:1;}s:28:"assertDirectoryNotIsWritable";a:6:{s:10:"methodName";s:28:"assertDirectoryNotIsWritable";s:9:"signature";s:70:"assertDirectoryNotIsWritable(string $directory, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:923;s:7:"endLine";i:929;s:3:"ccn";i:1;}s:16:"assertFileExists";a:6:{s:10:"methodName";s:16:"assertFileExists";s:9:"signature";s:57:"assertFileExists(string $filename, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:937;s:7:"endLine";i:940;s:3:"ccn";i:1;}s:22:"assertFileDoesNotExist";a:6:{s:10:"methodName";s:22:"assertFileDoesNotExist";s:9:"signature";s:63:"assertFileDoesNotExist(string $filename, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:948;s:7:"endLine";i:951;s:3:"ccn";i:1;}s:19:"assertFileNotExists";a:6:{s:10:"methodName";s:19:"assertFileNotExists";s:9:"signature";s:60:"assertFileNotExists(string $filename, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:963;s:7:"endLine";i:968;s:3:"ccn";i:1;}s:20:"assertFileIsReadable";a:6:{s:10:"methodName";s:20:"assertFileIsReadable";s:9:"signature";s:57:"assertFileIsReadable(string $file, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:976;s:7:"endLine";i:980;s:3:"ccn";i:1;}s:23:"assertFileIsNotReadable";a:6:{s:10:"methodName";s:23:"assertFileIsNotReadable";s:9:"signature";s:60:"assertFileIsNotReadable(string $file, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:988;s:7:"endLine";i:992;s:3:"ccn";i:1;}s:23:"assertFileNotIsReadable";a:6:{s:10:"methodName";s:23:"assertFileNotIsReadable";s:9:"signature";s:60:"assertFileNotIsReadable(string $file, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1004;s:7:"endLine";i:1010;s:3:"ccn";i:1;}s:20:"assertFileIsWritable";a:6:{s:10:"methodName";s:20:"assertFileIsWritable";s:9:"signature";s:57:"assertFileIsWritable(string $file, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1018;s:7:"endLine";i:1022;s:3:"ccn";i:1;}s:23:"assertFileIsNotWritable";a:6:{s:10:"methodName";s:23:"assertFileIsNotWritable";s:9:"signature";s:60:"assertFileIsNotWritable(string $file, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1030;s:7:"endLine";i:1034;s:3:"ccn";i:1;}s:23:"assertFileNotIsWritable";a:6:{s:10:"methodName";s:23:"assertFileNotIsWritable";s:9:"signature";s:60:"assertFileNotIsWritable(string $file, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1046;s:7:"endLine";i:1052;s:3:"ccn";i:1;}s:10:"assertTrue";a:6:{s:10:"methodName";s:10:"assertTrue";s:9:"signature";s:45:"assertTrue($condition, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1062;s:7:"endLine";i:1065;s:3:"ccn";i:1;}s:13:"assertNotTrue";a:6:{s:10:"methodName";s:13:"assertNotTrue";s:9:"signature";s:48:"assertNotTrue($condition, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1075;s:7:"endLine";i:1078;s:3:"ccn";i:1;}s:11:"assertFalse";a:6:{s:10:"methodName";s:11:"assertFalse";s:9:"signature";s:46:"assertFalse($condition, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1088;s:7:"endLine";i:1091;s:3:"ccn";i:1;}s:14:"assertNotFalse";a:6:{s:10:"methodName";s:14:"assertNotFalse";s:9:"signature";s:49:"assertNotFalse($condition, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1101;s:7:"endLine";i:1104;s:3:"ccn";i:1;}s:10:"assertNull";a:6:{s:10:"methodName";s:10:"assertNull";s:9:"signature";s:42:"assertNull($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1114;s:7:"endLine";i:1117;s:3:"ccn";i:1;}s:13:"assertNotNull";a:6:{s:10:"methodName";s:13:"assertNotNull";s:9:"signature";s:45:"assertNotNull($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1127;s:7:"endLine";i:1130;s:3:"ccn";i:1;}s:12:"assertFinite";a:6:{s:10:"methodName";s:12:"assertFinite";s:9:"signature";s:44:"assertFinite($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1138;s:7:"endLine";i:1141;s:3:"ccn";i:1;}s:14:"assertInfinite";a:6:{s:10:"methodName";s:14:"assertInfinite";s:9:"signature";s:46:"assertInfinite($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1149;s:7:"endLine";i:1152;s:3:"ccn";i:1;}s:9:"assertNan";a:6:{s:10:"methodName";s:9:"assertNan";s:9:"signature";s:41:"assertNan($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1160;s:7:"endLine";i:1163;s:3:"ccn";i:1;}s:23:"assertClassHasAttribute";a:6:{s:10:"methodName";s:23:"assertClassHasAttribute";s:9:"signature";s:88:"assertClassHasAttribute(string $attributeName, string $className, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1172;s:7:"endLine";i:1183;s:3:"ccn";i:3;}s:26:"assertClassNotHasAttribute";a:6:{s:10:"methodName";s:26:"assertClassNotHasAttribute";s:9:"signature";s:91:"assertClassNotHasAttribute(string $attributeName, string $className, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1192;s:7:"endLine";i:1209;s:3:"ccn";i:3;}s:29:"assertClassHasStaticAttribute";a:6:{s:10:"methodName";s:29:"assertClassHasStaticAttribute";s:9:"signature";s:94:"assertClassHasStaticAttribute(string $attributeName, string $className, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1218;s:7:"endLine";i:1233;s:3:"ccn";i:3;}s:32:"assertClassNotHasStaticAttribute";a:6:{s:10:"methodName";s:32:"assertClassNotHasStaticAttribute";s:9:"signature";s:97:"assertClassNotHasStaticAttribute(string $attributeName, string $className, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1242;s:7:"endLine";i:1259;s:3:"ccn";i:3;}s:24:"assertObjectHasAttribute";a:6:{s:10:"methodName";s:24:"assertObjectHasAttribute";s:9:"signature";s:79:"assertObjectHasAttribute(string $attributeName, $object, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1270;s:7:"endLine";i:1285;s:3:"ccn";i:3;}s:27:"assertObjectNotHasAttribute";a:6:{s:10:"methodName";s:27:"assertObjectNotHasAttribute";s:9:"signature";s:82:"assertObjectNotHasAttribute(string $attributeName, $object, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1296;s:7:"endLine";i:1313;s:3:"ccn";i:3;}s:10:"assertSame";a:6:{s:10:"methodName";s:10:"assertSame";s:9:"signature";s:53:"assertSame($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1327;s:7:"endLine";i:1334;s:3:"ccn";i:1;}s:13:"assertNotSame";a:6:{s:10:"methodName";s:13:"assertNotSame";s:9:"signature";s:56:"assertNotSame($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1344;s:7:"endLine";i:1357;s:3:"ccn";i:3;}s:16:"assertInstanceOf";a:6:{s:10:"methodName";s:16:"assertInstanceOf";s:9:"signature";s:66:"assertInstanceOf(string $expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1370;s:7:"endLine";i:1381;s:3:"ccn";i:3;}s:19:"assertNotInstanceOf";a:6:{s:10:"methodName";s:19:"assertNotInstanceOf";s:9:"signature";s:69:"assertNotInstanceOf(string $expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1394;s:7:"endLine";i:1407;s:3:"ccn";i:3;}s:13:"assertIsArray";a:6:{s:10:"methodName";s:13:"assertIsArray";s:9:"signature";s:45:"assertIsArray($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1417;s:7:"endLine";i:1424;s:3:"ccn";i:1;}s:12:"assertIsBool";a:6:{s:10:"methodName";s:12:"assertIsBool";s:9:"signature";s:44:"assertIsBool($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1434;s:7:"endLine";i:1441;s:3:"ccn";i:1;}s:13:"assertIsFloat";a:6:{s:10:"methodName";s:13:"assertIsFloat";s:9:"signature";s:45:"assertIsFloat($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1451;s:7:"endLine";i:1458;s:3:"ccn";i:1;}s:11:"assertIsInt";a:6:{s:10:"methodName";s:11:"assertIsInt";s:9:"signature";s:43:"assertIsInt($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1468;s:7:"endLine";i:1475;s:3:"ccn";i:1;}s:15:"assertIsNumeric";a:6:{s:10:"methodName";s:15:"assertIsNumeric";s:9:"signature";s:47:"assertIsNumeric($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1485;s:7:"endLine";i:1492;s:3:"ccn";i:1;}s:14:"assertIsObject";a:6:{s:10:"methodName";s:14:"assertIsObject";s:9:"signature";s:46:"assertIsObject($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1502;s:7:"endLine";i:1509;s:3:"ccn";i:1;}s:16:"assertIsResource";a:6:{s:10:"methodName";s:16:"assertIsResource";s:9:"signature";s:48:"assertIsResource($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1519;s:7:"endLine";i:1526;s:3:"ccn";i:1;}s:22:"assertIsClosedResource";a:6:{s:10:"methodName";s:22:"assertIsClosedResource";s:9:"signature";s:54:"assertIsClosedResource($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1536;s:7:"endLine";i:1543;s:3:"ccn";i:1;}s:14:"assertIsString";a:6:{s:10:"methodName";s:14:"assertIsString";s:9:"signature";s:46:"assertIsString($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1553;s:7:"endLine";i:1560;s:3:"ccn";i:1;}s:14:"assertIsScalar";a:6:{s:10:"methodName";s:14:"assertIsScalar";s:9:"signature";s:46:"assertIsScalar($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1570;s:7:"endLine";i:1577;s:3:"ccn";i:1;}s:16:"assertIsCallable";a:6:{s:10:"methodName";s:16:"assertIsCallable";s:9:"signature";s:48:"assertIsCallable($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1587;s:7:"endLine";i:1594;s:3:"ccn";i:1;}s:16:"assertIsIterable";a:6:{s:10:"methodName";s:16:"assertIsIterable";s:9:"signature";s:48:"assertIsIterable($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1604;s:7:"endLine";i:1611;s:3:"ccn";i:1;}s:16:"assertIsNotArray";a:6:{s:10:"methodName";s:16:"assertIsNotArray";s:9:"signature";s:48:"assertIsNotArray($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1621;s:7:"endLine";i:1628;s:3:"ccn";i:1;}s:15:"assertIsNotBool";a:6:{s:10:"methodName";s:15:"assertIsNotBool";s:9:"signature";s:47:"assertIsNotBool($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1638;s:7:"endLine";i:1645;s:3:"ccn";i:1;}s:16:"assertIsNotFloat";a:6:{s:10:"methodName";s:16:"assertIsNotFloat";s:9:"signature";s:48:"assertIsNotFloat($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1655;s:7:"endLine";i:1662;s:3:"ccn";i:1;}s:14:"assertIsNotInt";a:6:{s:10:"methodName";s:14:"assertIsNotInt";s:9:"signature";s:46:"assertIsNotInt($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1672;s:7:"endLine";i:1679;s:3:"ccn";i:1;}s:18:"assertIsNotNumeric";a:6:{s:10:"methodName";s:18:"assertIsNotNumeric";s:9:"signature";s:50:"assertIsNotNumeric($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1689;s:7:"endLine";i:1696;s:3:"ccn";i:1;}s:17:"assertIsNotObject";a:6:{s:10:"methodName";s:17:"assertIsNotObject";s:9:"signature";s:49:"assertIsNotObject($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1706;s:7:"endLine";i:1713;s:3:"ccn";i:1;}s:19:"assertIsNotResource";a:6:{s:10:"methodName";s:19:"assertIsNotResource";s:9:"signature";s:51:"assertIsNotResource($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1723;s:7:"endLine";i:1730;s:3:"ccn";i:1;}s:25:"assertIsNotClosedResource";a:6:{s:10:"methodName";s:25:"assertIsNotClosedResource";s:9:"signature";s:57:"assertIsNotClosedResource($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1740;s:7:"endLine";i:1747;s:3:"ccn";i:1;}s:17:"assertIsNotString";a:6:{s:10:"methodName";s:17:"assertIsNotString";s:9:"signature";s:49:"assertIsNotString($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1757;s:7:"endLine";i:1764;s:3:"ccn";i:1;}s:17:"assertIsNotScalar";a:6:{s:10:"methodName";s:17:"assertIsNotScalar";s:9:"signature";s:49:"assertIsNotScalar($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1774;s:7:"endLine";i:1781;s:3:"ccn";i:1;}s:19:"assertIsNotCallable";a:6:{s:10:"methodName";s:19:"assertIsNotCallable";s:9:"signature";s:51:"assertIsNotCallable($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1791;s:7:"endLine";i:1798;s:3:"ccn";i:1;}s:19:"assertIsNotIterable";a:6:{s:10:"methodName";s:19:"assertIsNotIterable";s:9:"signature";s:51:"assertIsNotIterable($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1808;s:7:"endLine";i:1815;s:3:"ccn";i:1;}s:30:"assertMatchesRegularExpression";a:6:{s:10:"methodName";s:30:"assertMatchesRegularExpression";s:9:"signature";s:86:"assertMatchesRegularExpression(string $pattern, string $string, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1823;s:7:"endLine";i:1826;s:3:"ccn";i:1;}s:12:"assertRegExp";a:6:{s:10:"methodName";s:12:"assertRegExp";s:9:"signature";s:68:"assertRegExp(string $pattern, string $string, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1838;s:7:"endLine";i:1843;s:3:"ccn";i:1;}s:35:"assertDoesNotMatchRegularExpression";a:6:{s:10:"methodName";s:35:"assertDoesNotMatchRegularExpression";s:9:"signature";s:91:"assertDoesNotMatchRegularExpression(string $pattern, string $string, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1851;s:7:"endLine";i:1860;s:3:"ccn";i:1;}s:15:"assertNotRegExp";a:6:{s:10:"methodName";s:15:"assertNotRegExp";s:9:"signature";s:71:"assertNotRegExp(string $pattern, string $string, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1872;s:7:"endLine";i:1883;s:3:"ccn";i:1;}s:14:"assertSameSize";a:6:{s:10:"methodName";s:14:"assertSameSize";s:9:"signature";s:57:"assertSameSize($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1896;s:7:"endLine";i:1911;s:3:"ccn";i:5;}s:17:"assertNotSameSize";a:6:{s:10:"methodName";s:17:"assertNotSameSize";s:9:"signature";s:60:"assertNotSameSize($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1924;s:7:"endLine";i:1941;s:3:"ccn";i:5;}s:25:"assertStringMatchesFormat";a:6:{s:10:"methodName";s:25:"assertStringMatchesFormat";s:9:"signature";s:80:"assertStringMatchesFormat(string $format, string $string, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1949;s:7:"endLine";i:1952;s:3:"ccn";i:1;}s:28:"assertStringNotMatchesFormat";a:6:{s:10:"methodName";s:28:"assertStringNotMatchesFormat";s:9:"signature";s:83:"assertStringNotMatchesFormat(string $format, string $string, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1960;s:7:"endLine";i:1969;s:3:"ccn";i:1;}s:29:"assertStringMatchesFormatFile";a:6:{s:10:"methodName";s:29:"assertStringMatchesFormatFile";s:9:"signature";s:88:"assertStringMatchesFormatFile(string $formatFile, string $string, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1977;s:7:"endLine";i:1988;s:3:"ccn";i:1;}s:32:"assertStringNotMatchesFormatFile";a:6:{s:10:"methodName";s:32:"assertStringNotMatchesFormatFile";s:9:"signature";s:91:"assertStringNotMatchesFormatFile(string $formatFile, string $string, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:1996;s:7:"endLine";i:2009;s:3:"ccn";i:1;}s:22:"assertStringStartsWith";a:6:{s:10:"methodName";s:22:"assertStringStartsWith";s:9:"signature";s:77:"assertStringStartsWith(string $prefix, string $string, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2017;s:7:"endLine";i:2020;s:3:"ccn";i:1;}s:25:"assertStringStartsNotWith";a:6:{s:10:"methodName";s:25:"assertStringStartsNotWith";s:9:"signature";s:66:"assertStringStartsNotWith($prefix, $string, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2031;s:7:"endLine";i:2040;s:3:"ccn";i:1;}s:26:"assertStringContainsString";a:6:{s:10:"methodName";s:26:"assertStringContainsString";s:9:"signature";s:83:"assertStringContainsString(string $needle, string $haystack, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2046;s:7:"endLine";i:2051;s:3:"ccn";i:1;}s:38:"assertStringContainsStringIgnoringCase";a:6:{s:10:"methodName";s:38:"assertStringContainsStringIgnoringCase";s:9:"signature";s:95:"assertStringContainsStringIgnoringCase(string $needle, string $haystack, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2057;s:7:"endLine";i:2062;s:3:"ccn";i:1;}s:29:"assertStringNotContainsString";a:6:{s:10:"methodName";s:29:"assertStringNotContainsString";s:9:"signature";s:86:"assertStringNotContainsString(string $needle, string $haystack, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2068;s:7:"endLine";i:2073;s:3:"ccn";i:1;}s:41:"assertStringNotContainsStringIgnoringCase";a:6:{s:10:"methodName";s:41:"assertStringNotContainsStringIgnoringCase";s:9:"signature";s:98:"assertStringNotContainsStringIgnoringCase(string $needle, string $haystack, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2079;s:7:"endLine";i:2084;s:3:"ccn";i:1;}s:20:"assertStringEndsWith";a:6:{s:10:"methodName";s:20:"assertStringEndsWith";s:9:"signature";s:75:"assertStringEndsWith(string $suffix, string $string, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2092;s:7:"endLine";i:2095;s:3:"ccn";i:1;}s:23:"assertStringEndsNotWith";a:6:{s:10:"methodName";s:23:"assertStringEndsNotWith";s:9:"signature";s:78:"assertStringEndsNotWith(string $suffix, string $string, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2103;s:7:"endLine";i:2112;s:3:"ccn";i:1;}s:26:"assertXmlFileEqualsXmlFile";a:6:{s:10:"methodName";s:26:"assertXmlFileEqualsXmlFile";s:9:"signature";s:91:"assertXmlFileEqualsXmlFile(string $expectedFile, string $actualFile, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2121;s:7:"endLine";i:2127;s:3:"ccn";i:1;}s:29:"assertXmlFileNotEqualsXmlFile";a:6:{s:10:"methodName";s:29:"assertXmlFileNotEqualsXmlFile";s:9:"signature";s:94:"assertXmlFileNotEqualsXmlFile(string $expectedFile, string $actualFile, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2136;s:7:"endLine";i:2142;s:3:"ccn";i:1;}s:28:"assertXmlStringEqualsXmlFile";a:6:{s:10:"methodName";s:28:"assertXmlStringEqualsXmlFile";s:9:"signature";s:85:"assertXmlStringEqualsXmlFile(string $expectedFile, $actualXml, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2153;s:7:"endLine";i:2166;s:3:"ccn";i:2;}s:31:"assertXmlStringNotEqualsXmlFile";a:6:{s:10:"methodName";s:31:"assertXmlStringNotEqualsXmlFile";s:9:"signature";s:88:"assertXmlStringNotEqualsXmlFile(string $expectedFile, $actualXml, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2177;s:7:"endLine";i:2190;s:3:"ccn";i:2;}s:30:"assertXmlStringEqualsXmlString";a:6:{s:10:"methodName";s:30:"assertXmlStringEqualsXmlString";s:9:"signature";s:79:"assertXmlStringEqualsXmlString($expectedXml, $actualXml, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2202;s:7:"endLine";i:2221;s:3:"ccn";i:3;}s:33:"assertXmlStringNotEqualsXmlString";a:6:{s:10:"methodName";s:33:"assertXmlStringNotEqualsXmlString";s:9:"signature";s:82:"assertXmlStringNotEqualsXmlString($expectedXml, $actualXml, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2233;s:7:"endLine";i:2252;s:3:"ccn";i:3;}s:23:"assertEqualXMLStructure";a:6:{s:10:"methodName";s:23:"assertEqualXMLStructure";s:9:"signature";s:125:"assertEqualXMLStructure(DOMElement $expectedElement, DOMElement $actualElement, bool $checkAttributes, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2265;s:7:"endLine";i:2332;s:3:"ccn";i:8;}s:10:"assertThat";a:6:{s:10:"methodName";s:10:"assertThat";s:9:"signature";s:94:"assertThat($value, PHPUnit\Framework\Constraint\Constraint $constraint, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2340;s:7:"endLine";i:2345;s:3:"ccn";i:1;}s:10:"assertJson";a:6:{s:10:"methodName";s:10:"assertJson";s:9:"signature";s:53:"assertJson(string $actualJson, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2353;s:7:"endLine";i:2356;s:3:"ccn";i:1;}s:32:"assertJsonStringEqualsJsonString";a:6:{s:10:"methodName";s:32:"assertJsonStringEqualsJsonString";s:9:"signature";s:97:"assertJsonStringEqualsJsonString(string $expectedJson, string $actualJson, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2364;s:7:"endLine";i:2370;s:3:"ccn";i:1;}s:35:"assertJsonStringNotEqualsJsonString";a:6:{s:10:"methodName";s:35:"assertJsonStringNotEqualsJsonString";s:9:"signature";s:86:"assertJsonStringNotEqualsJsonString($expectedJson, $actualJson, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2381;s:7:"endLine";i:2393;s:3:"ccn";i:1;}s:30:"assertJsonStringEqualsJsonFile";a:6:{s:10:"methodName";s:30:"assertJsonStringEqualsJsonFile";s:9:"signature";s:95:"assertJsonStringEqualsJsonFile(string $expectedFile, string $actualJson, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2401;s:7:"endLine";i:2410;s:3:"ccn";i:1;}s:33:"assertJsonStringNotEqualsJsonFile";a:6:{s:10:"methodName";s:33:"assertJsonStringNotEqualsJsonFile";s:9:"signature";s:98:"assertJsonStringNotEqualsJsonFile(string $expectedFile, string $actualJson, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2418;s:7:"endLine";i:2433;s:3:"ccn";i:1;}s:28:"assertJsonFileEqualsJsonFile";a:6:{s:10:"methodName";s:28:"assertJsonFileEqualsJsonFile";s:9:"signature";s:93:"assertJsonFileEqualsJsonFile(string $expectedFile, string $actualFile, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2441;s:7:"endLine";i:2460;s:3:"ccn";i:1;}s:31:"assertJsonFileNotEqualsJsonFile";a:6:{s:10:"methodName";s:31:"assertJsonFileNotEqualsJsonFile";s:9:"signature";s:96:"assertJsonFileNotEqualsJsonFile(string $expectedFile, string $actualFile, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2468;s:7:"endLine";i:2487;s:3:"ccn";i:1;}s:10:"logicalAnd";a:6:{s:10:"methodName";s:10:"logicalAnd";s:9:"signature";s:53:"logicalAnd(): PHPUnit\Framework\Constraint\LogicalAnd";s:10:"visibility";s:6:"public";s:9:"startLine";i:2492;s:7:"endLine";i:2500;s:3:"ccn";i:1;}s:9:"logicalOr";a:6:{s:10:"methodName";s:9:"logicalOr";s:9:"signature";s:51:"logicalOr(): PHPUnit\Framework\Constraint\LogicalOr";s:10:"visibility";s:6:"public";s:9:"startLine";i:2502;s:7:"endLine";i:2510;s:3:"ccn";i:1;}s:10:"logicalNot";a:6:{s:10:"methodName";s:10:"logicalNot";s:9:"signature";s:104:"logicalNot(PHPUnit\Framework\Constraint\Constraint $constraint): PHPUnit\Framework\Constraint\LogicalNot";s:10:"visibility";s:6:"public";s:9:"startLine";i:2512;s:7:"endLine";i:2515;s:3:"ccn";i:1;}s:10:"logicalXor";a:6:{s:10:"methodName";s:10:"logicalXor";s:9:"signature";s:53:"logicalXor(): PHPUnit\Framework\Constraint\LogicalXor";s:10:"visibility";s:6:"public";s:9:"startLine";i:2517;s:7:"endLine";i:2525;s:3:"ccn";i:1;}s:8:"anything";a:6:{s:10:"methodName";s:8:"anything";s:9:"signature";s:51:"anything(): PHPUnit\Framework\Constraint\IsAnything";s:10:"visibility";s:6:"public";s:9:"startLine";i:2527;s:7:"endLine";i:2530;s:3:"ccn";i:1;}s:6:"isTrue";a:6:{s:10:"methodName";s:6:"isTrue";s:9:"signature";s:45:"isTrue(): PHPUnit\Framework\Constraint\IsTrue";s:10:"visibility";s:6:"public";s:9:"startLine";i:2532;s:7:"endLine";i:2535;s:3:"ccn";i:1;}s:8:"callback";a:6:{s:10:"methodName";s:8:"callback";s:9:"signature";s:67:"callback(callable $callback): PHPUnit\Framework\Constraint\Callback";s:10:"visibility";s:6:"public";s:9:"startLine";i:2544;s:7:"endLine";i:2547;s:3:"ccn";i:1;}s:7:"isFalse";a:6:{s:10:"methodName";s:7:"isFalse";s:9:"signature";s:47:"isFalse(): PHPUnit\Framework\Constraint\IsFalse";s:10:"visibility";s:6:"public";s:9:"startLine";i:2549;s:7:"endLine";i:2552;s:3:"ccn";i:1;}s:6:"isJson";a:6:{s:10:"methodName";s:6:"isJson";s:9:"signature";s:45:"isJson(): PHPUnit\Framework\Constraint\IsJson";s:10:"visibility";s:6:"public";s:9:"startLine";i:2554;s:7:"endLine";i:2557;s:3:"ccn";i:1;}s:6:"isNull";a:6:{s:10:"methodName";s:6:"isNull";s:9:"signature";s:45:"isNull(): PHPUnit\Framework\Constraint\IsNull";s:10:"visibility";s:6:"public";s:9:"startLine";i:2559;s:7:"endLine";i:2562;s:3:"ccn";i:1;}s:8:"isFinite";a:6:{s:10:"methodName";s:8:"isFinite";s:9:"signature";s:49:"isFinite(): PHPUnit\Framework\Constraint\IsFinite";s:10:"visibility";s:6:"public";s:9:"startLine";i:2564;s:7:"endLine";i:2567;s:3:"ccn";i:1;}s:10:"isInfinite";a:6:{s:10:"methodName";s:10:"isInfinite";s:9:"signature";s:53:"isInfinite(): PHPUnit\Framework\Constraint\IsInfinite";s:10:"visibility";s:6:"public";s:9:"startLine";i:2569;s:7:"endLine";i:2572;s:3:"ccn";i:1;}s:5:"isNan";a:6:{s:10:"methodName";s:5:"isNan";s:9:"signature";s:43:"isNan(): PHPUnit\Framework\Constraint\IsNan";s:10:"visibility";s:6:"public";s:9:"startLine";i:2574;s:7:"endLine";i:2577;s:3:"ccn";i:1;}s:13:"containsEqual";a:6:{s:10:"methodName";s:13:"containsEqual";s:9:"signature";s:76:"containsEqual($value): PHPUnit\Framework\Constraint\TraversableContainsEqual";s:10:"visibility";s:6:"public";s:9:"startLine";i:2579;s:7:"endLine";i:2582;s:3:"ccn";i:1;}s:17:"containsIdentical";a:6:{s:10:"methodName";s:17:"containsIdentical";s:9:"signature";s:84:"containsIdentical($value): PHPUnit\Framework\Constraint\TraversableContainsIdentical";s:10:"visibility";s:6:"public";s:9:"startLine";i:2584;s:7:"endLine";i:2587;s:3:"ccn";i:1;}s:12:"containsOnly";a:6:{s:10:"methodName";s:12:"containsOnly";s:9:"signature";s:80:"containsOnly(string $type): PHPUnit\Framework\Constraint\TraversableContainsOnly";s:10:"visibility";s:6:"public";s:9:"startLine";i:2589;s:7:"endLine";i:2592;s:3:"ccn";i:1;}s:23:"containsOnlyInstancesOf";a:6:{s:10:"methodName";s:23:"containsOnlyInstancesOf";s:9:"signature";s:96:"containsOnlyInstancesOf(string $className): PHPUnit\Framework\Constraint\TraversableContainsOnly";s:10:"visibility";s:6:"public";s:9:"startLine";i:2594;s:7:"endLine";i:2597;s:3:"ccn";i:1;}s:11:"arrayHasKey";a:6:{s:10:"methodName";s:11:"arrayHasKey";s:9:"signature";s:59:"arrayHasKey($key): PHPUnit\Framework\Constraint\ArrayHasKey";s:10:"visibility";s:6:"public";s:9:"startLine";i:2602;s:7:"endLine";i:2605;s:3:"ccn";i:1;}s:7:"equalTo";a:6:{s:10:"methodName";s:7:"equalTo";s:9:"signature";s:53:"equalTo($value): PHPUnit\Framework\Constraint\IsEqual";s:10:"visibility";s:6:"public";s:9:"startLine";i:2607;s:7:"endLine";i:2610;s:3:"ccn";i:1;}s:21:"equalToCanonicalizing";a:6:{s:10:"methodName";s:21:"equalToCanonicalizing";s:9:"signature";s:81:"equalToCanonicalizing($value): PHPUnit\Framework\Constraint\IsEqualCanonicalizing";s:10:"visibility";s:6:"public";s:9:"startLine";i:2612;s:7:"endLine";i:2615;s:3:"ccn";i:1;}s:19:"equalToIgnoringCase";a:6:{s:10:"methodName";s:19:"equalToIgnoringCase";s:9:"signature";s:77:"equalToIgnoringCase($value): PHPUnit\Framework\Constraint\IsEqualIgnoringCase";s:10:"visibility";s:6:"public";s:9:"startLine";i:2617;s:7:"endLine";i:2620;s:3:"ccn";i:1;}s:16:"equalToWithDelta";a:6:{s:10:"methodName";s:16:"equalToWithDelta";s:9:"signature";s:85:"equalToWithDelta($value, float $delta): PHPUnit\Framework\Constraint\IsEqualWithDelta";s:10:"visibility";s:6:"public";s:9:"startLine";i:2622;s:7:"endLine";i:2625;s:3:"ccn";i:1;}s:7:"isEmpty";a:6:{s:10:"methodName";s:7:"isEmpty";s:9:"signature";s:47:"isEmpty(): PHPUnit\Framework\Constraint\IsEmpty";s:10:"visibility";s:6:"public";s:9:"startLine";i:2627;s:7:"endLine";i:2630;s:3:"ccn";i:1;}s:10:"isWritable";a:6:{s:10:"methodName";s:10:"isWritable";s:9:"signature";s:53:"isWritable(): PHPUnit\Framework\Constraint\IsWritable";s:10:"visibility";s:6:"public";s:9:"startLine";i:2632;s:7:"endLine";i:2635;s:3:"ccn";i:1;}s:10:"isReadable";a:6:{s:10:"methodName";s:10:"isReadable";s:9:"signature";s:53:"isReadable(): PHPUnit\Framework\Constraint\IsReadable";s:10:"visibility";s:6:"public";s:9:"startLine";i:2637;s:7:"endLine";i:2640;s:3:"ccn";i:1;}s:15:"directoryExists";a:6:{s:10:"methodName";s:15:"directoryExists";s:9:"signature";s:63:"directoryExists(): PHPUnit\Framework\Constraint\DirectoryExists";s:10:"visibility";s:6:"public";s:9:"startLine";i:2642;s:7:"endLine";i:2645;s:3:"ccn";i:1;}s:10:"fileExists";a:6:{s:10:"methodName";s:10:"fileExists";s:9:"signature";s:53:"fileExists(): PHPUnit\Framework\Constraint\FileExists";s:10:"visibility";s:6:"public";s:9:"startLine";i:2647;s:7:"endLine";i:2650;s:3:"ccn";i:1;}s:11:"greaterThan";a:6:{s:10:"methodName";s:11:"greaterThan";s:9:"signature";s:61:"greaterThan($value): PHPUnit\Framework\Constraint\GreaterThan";s:10:"visibility";s:6:"public";s:9:"startLine";i:2652;s:7:"endLine";i:2655;s:3:"ccn";i:1;}s:18:"greaterThanOrEqual";a:6:{s:10:"methodName";s:18:"greaterThanOrEqual";s:9:"signature";s:66:"greaterThanOrEqual($value): PHPUnit\Framework\Constraint\LogicalOr";s:10:"visibility";s:6:"public";s:9:"startLine";i:2657;s:7:"endLine";i:2663;s:3:"ccn";i:1;}s:17:"classHasAttribute";a:6:{s:10:"methodName";s:17:"classHasAttribute";s:9:"signature";s:88:"classHasAttribute(string $attributeName): PHPUnit\Framework\Constraint\ClassHasAttribute";s:10:"visibility";s:6:"public";s:9:"startLine";i:2665;s:7:"endLine";i:2668;s:3:"ccn";i:1;}s:23:"classHasStaticAttribute";a:6:{s:10:"methodName";s:23:"classHasStaticAttribute";s:9:"signature";s:100:"classHasStaticAttribute(string $attributeName): PHPUnit\Framework\Constraint\ClassHasStaticAttribute";s:10:"visibility";s:6:"public";s:9:"startLine";i:2670;s:7:"endLine";i:2673;s:3:"ccn";i:1;}s:18:"objectHasAttribute";a:6:{s:10:"methodName";s:18:"objectHasAttribute";s:9:"signature";s:83:"objectHasAttribute($attributeName): PHPUnit\Framework\Constraint\ObjectHasAttribute";s:10:"visibility";s:6:"public";s:9:"startLine";i:2675;s:7:"endLine";i:2678;s:3:"ccn";i:1;}s:11:"identicalTo";a:6:{s:10:"methodName";s:11:"identicalTo";s:9:"signature";s:61:"identicalTo($value): PHPUnit\Framework\Constraint\IsIdentical";s:10:"visibility";s:6:"public";s:9:"startLine";i:2680;s:7:"endLine";i:2683;s:3:"ccn";i:1;}s:12:"isInstanceOf";a:6:{s:10:"methodName";s:12:"isInstanceOf";s:9:"signature";s:74:"isInstanceOf(string $className): PHPUnit\Framework\Constraint\IsInstanceOf";s:10:"visibility";s:6:"public";s:9:"startLine";i:2685;s:7:"endLine";i:2688;s:3:"ccn";i:1;}s:6:"isType";a:6:{s:10:"methodName";s:6:"isType";s:9:"signature";s:57:"isType(string $type): PHPUnit\Framework\Constraint\IsType";s:10:"visibility";s:6:"public";s:9:"startLine";i:2690;s:7:"endLine";i:2693;s:3:"ccn";i:1;}s:8:"lessThan";a:6:{s:10:"methodName";s:8:"lessThan";s:9:"signature";s:55:"lessThan($value): PHPUnit\Framework\Constraint\LessThan";s:10:"visibility";s:6:"public";s:9:"startLine";i:2695;s:7:"endLine";i:2698;s:3:"ccn";i:1;}s:15:"lessThanOrEqual";a:6:{s:10:"methodName";s:15:"lessThanOrEqual";s:9:"signature";s:63:"lessThanOrEqual($value): PHPUnit\Framework\Constraint\LogicalOr";s:10:"visibility";s:6:"public";s:9:"startLine";i:2700;s:7:"endLine";i:2706;s:3:"ccn";i:1;}s:24:"matchesRegularExpression";a:6:{s:10:"methodName";s:24:"matchesRegularExpression";s:9:"signature";s:89:"matchesRegularExpression(string $pattern): PHPUnit\Framework\Constraint\RegularExpression";s:10:"visibility";s:6:"public";s:9:"startLine";i:2708;s:7:"endLine";i:2711;s:3:"ccn";i:1;}s:7:"matches";a:6:{s:10:"methodName";s:7:"matches";s:9:"signature";s:84:"matches(string $string): PHPUnit\Framework\Constraint\StringMatchesFormatDescription";s:10:"visibility";s:6:"public";s:9:"startLine";i:2713;s:7:"endLine";i:2716;s:3:"ccn";i:1;}s:16:"stringStartsWith";a:6:{s:10:"methodName";s:16:"stringStartsWith";s:9:"signature";s:72:"stringStartsWith($prefix): PHPUnit\Framework\Constraint\StringStartsWith";s:10:"visibility";s:6:"public";s:9:"startLine";i:2718;s:7:"endLine";i:2721;s:3:"ccn";i:1;}s:14:"stringContains";a:6:{s:10:"methodName";s:14:"stringContains";s:9:"signature";s:87:"stringContains(string $string, bool $case): PHPUnit\Framework\Constraint\StringContains";s:10:"visibility";s:6:"public";s:9:"startLine";i:2723;s:7:"endLine";i:2726;s:3:"ccn";i:1;}s:14:"stringEndsWith";a:6:{s:10:"methodName";s:14:"stringEndsWith";s:9:"signature";s:75:"stringEndsWith(string $suffix): PHPUnit\Framework\Constraint\StringEndsWith";s:10:"visibility";s:6:"public";s:9:"startLine";i:2728;s:7:"endLine";i:2731;s:3:"ccn";i:1;}s:7:"countOf";a:6:{s:10:"methodName";s:7:"countOf";s:9:"signature";s:55:"countOf(int $count): PHPUnit\Framework\Constraint\Count";s:10:"visibility";s:6:"public";s:9:"startLine";i:2733;s:7:"endLine";i:2736;s:3:"ccn";i:1;}s:12:"objectEquals";a:6:{s:10:"methodName";s:12:"objectEquals";s:9:"signature";s:87:"objectEquals(object $object, string $method): PHPUnit\Framework\Constraint\ObjectEquals";s:10:"visibility";s:6:"public";s:9:"startLine";i:2738;s:7:"endLine";i:2741;s:3:"ccn";i:1;}s:4:"fail";a:6:{s:10:"methodName";s:4:"fail";s:9:"signature";s:27:"fail(string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2750;s:7:"endLine";i:2755;s:3:"ccn";i:1;}s:18:"markTestIncomplete";a:6:{s:10:"methodName";s:18:"markTestIncomplete";s:9:"signature";s:41:"markTestIncomplete(string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2764;s:7:"endLine";i:2767;s:3:"ccn";i:1;}s:15:"markTestSkipped";a:6:{s:10:"methodName";s:15:"markTestSkipped";s:9:"signature";s:38:"markTestSkipped(string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2777;s:7:"endLine";i:2787;s:3:"ccn";i:2;}s:8:"getCount";a:6:{s:10:"methodName";s:8:"getCount";s:9:"signature";s:15:"getCount(): int";s:10:"visibility";s:6:"public";s:9:"startLine";i:2792;s:7:"endLine";i:2795;s:3:"ccn";i:1;}s:10:"resetCount";a:6:{s:10:"methodName";s:10:"resetCount";s:9:"signature";s:18:"resetCount(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:2800;s:7:"endLine";i:2803;s:3:"ccn";i:1;}s:18:"detectLocationHint";a:6:{s:10:"methodName";s:18:"detectLocationHint";s:9:"signature";s:43:"detectLocationHint(string $message): ?array";s:10:"visibility";s:7:"private";s:9:"startLine";i:2805;s:7:"endLine";i:2827;s:3:"ccn";i:5;}s:26:"isValidObjectAttributeName";a:6:{s:10:"methodName";s:26:"isValidObjectAttributeName";s:9:"signature";s:55:"isValidObjectAttributeName(string $attributeName): bool";s:10:"visibility";s:7:"private";s:9:"startLine";i:2829;s:7:"endLine";i:2832;s:3:"ccn";i:1;}s:25:"isValidClassAttributeName";a:6:{s:10:"methodName";s:25:"isValidClassAttributeName";s:9:"signature";s:54:"isValidClassAttributeName(string $attributeName): bool";s:10:"visibility";s:7:"private";s:9:"startLine";i:2834;s:7:"endLine";i:2837;s:3:"ccn";i:1;}s:13:"createWarning";a:6:{s:10:"methodName";s:13:"createWarning";s:9:"signature";s:36:"createWarning(string $warning): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:2842;s:7:"endLine";i:2853;s:3:"ccn";i:4;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";O:41:"SebastianBergmann\LinesOfCode\LinesOfCode":4:{s:54:" SebastianBergmann\LinesOfCode\LinesOfCode linesOfCode";i:2854;s:61:" SebastianBergmann\LinesOfCode\LinesOfCode commentLinesOfCode";i:1060;s:64:" SebastianBergmann\LinesOfCode\LinesOfCode nonCommentLinesOfCode";i:1794;s:61:" SebastianBergmann\LinesOfCode\LinesOfCode logicalLinesOfCode";i:101;}s:15:"ignoredLinesFor";a:151:{i:0;i:91;i:1;i:762;i:2;i:763;i:3;i:764;i:4;i:765;i:5;i:766;i:6;i:767;i:7;i:801;i:8;i:802;i:9;i:803;i:10;i:804;i:11;i:805;i:12;i:806;i:13;i:840;i:14;i:841;i:15;i:842;i:16;i:843;i:17;i:844;i:18;i:845;i:19;i:881;i:20;i:882;i:21;i:883;i:22;i:884;i:23;i:885;i:24;i:886;i:25;i:887;i:26;i:923;i:27;i:924;i:28;i:925;i:29;i:926;i:30;i:927;i:31;i:928;i:32;i:929;i:33;i:963;i:34;i:964;i:35;i:965;i:36;i:966;i:37;i:967;i:38;i:968;i:39;i:1004;i:40;i:1005;i:41;i:1006;i:42;i:1007;i:43;i:1008;i:44;i:1009;i:45;i:1010;i:46;i:1046;i:47;i:1047;i:48;i:1048;i:49;i:1049;i:50;i:1050;i:51;i:1051;i:52;i:1052;i:53;i:1838;i:54;i:1839;i:55;i:1840;i:56;i:1841;i:57;i:1842;i:58;i:1843;i:59;i:1872;i:60;i:1873;i:61;i:1874;i:62;i:1875;i:63;i:1876;i:64;i:1877;i:65;i:1878;i:66;i:1879;i:67;i:1880;i:68;i:1881;i:69;i:1882;i:70;i:1883;i:71;i:2265;i:72;i:2266;i:73;i:2267;i:74;i:2268;i:75;i:2269;i:76;i:2270;i:77;i:2271;i:78;i:2272;i:79;i:2273;i:80;i:2274;i:81;i:2275;i:82;i:2276;i:83;i:2277;i:84;i:2278;i:85;i:2279;i:86;i:2280;i:87;i:2281;i:88;i:2282;i:89;i:2283;i:90;i:2284;i:91;i:2285;i:92;i:2286;i:93;i:2287;i:94;i:2288;i:95;i:2289;i:96;i:2290;i:97;i:2291;i:98;i:2292;i:99;i:2293;i:100;i:2294;i:101;i:2295;i:102;i:2296;i:103;i:2297;i:104;i:2298;i:105;i:2299;i:106;i:2300;i:107;i:2301;i:108;i:2302;i:109;i:2303;i:110;i:2304;i:111;i:2305;i:112;i:2306;i:113;i:2307;i:114;i:2308;i:115;i:2309;i:116;i:2310;i:117;i:2311;i:118;i:2312;i:119;i:2313;i:120;i:2314;i:121;i:2315;i:122;i:2316;i:123;i:2317;i:124;i:2318;i:125;i:2319;i:126;i:2320;i:127;i:2321;i:128;i:2322;i:129;i:2323;i:130;i:2324;i:131;i:2325;i:132;i:2326;i:133;i:2327;i:134;i:2328;i:135;i:2329;i:136;i:2330;i:137;i:2331;i:138;i:2332;i:139;i:2842;i:140;i:2843;i:141;i:2844;i:142;i:2845;i:143;i:2846;i:144;i:2847;i:145;i:2848;i:146;i:2849;i:147;i:2850;i:148;i:2851;i:149;i:2852;i:150;i:2853;}}